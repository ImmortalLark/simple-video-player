{
  "version": 3,
  "sources": ["../src/constant.ts", "../src/video.ts", "../src/index.ts"],
  "sourcesContent": ["export const VideoExtensionsRegexp = /(?=.)(mp4|ogg|avi|webm)$/;", "import { VideoExtensionsRegexp } from \"./constant\";\n\nconst DefaultWidth = 320;\nconst DefaultHeight = 180;\n\nclass Video {\n  rawVideo: HTMLVideoElement;\n  canvas!: HTMLCanvasElement;\n\n  private urls?: string[];\n  private ctx!: CanvasRenderingContext2D;\n\n  private width;\n  private height;\n\n  constructor(params?: {\n    width: number;\n    height: number;\n  }) {\n    this.width = params?.width || DefaultWidth;\n    this.height = params?.height || DefaultHeight;\n\n    this.rawVideo = document.createElement('video');\n    this.rawVideo.className = 'simple-player__raw-video';\n\n    this.initCanvas();\n  }\n  \n  play(urls: string[]) {\n    if (urls instanceof Array && urls?.length) {\n      this.urls = urls;\n      // Clean up elements left over from the last playback\n      this.rawVideo.innerHTML = '';\n      urls.forEach((url) => {\n        const source = this.createSource(url);\n        if (source) this.rawVideo.appendChild(source);\n      });\n    }\n\n    if (!this.urls) throw new Error('No videos available to play');\n\n    this.rawVideo.play();\n    this.render();\n  }\n\n  pause() {\n    this.rawVideo.pause();\n  }\n\n  private initCanvas() {\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d')!; \n\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n  }\n\n  private createSource(url: string) {\n    const ext = url.match(VideoExtensionsRegexp)?.[0];\n    if (!ext) return;\n    // Create source element and append it to the video element\n    const source = document.createElement('source');\n    source.src = url;\n    source.type= `video/${ext}`;\n    return source;\n  }\n\n  private render() {\n    if (this.rawVideo.paused || this.rawVideo.ended) {\n      return;\n    }\n    this.ctx.drawImage(this.rawVideo, 0, 0, this.width, this.height);\n    window.requestAnimationFrame(() => {\n      this.render();\n    });\n  }\n\n}\n\nexport default Video;", "import Video from \"./video\";\n\nclass Player {\n  private container: HTMLElement;\n  public video!: Video;\n\n  constructor(elementId: string) {\n    const element = document.getElementById(elementId);\n    if (!element) throw new Error('Container not exist!');\n\n    this.container = element;\n    this.initCore();\n  }\n\n  // Create UI and initialize core functions such as play, pause, fast forward, etc.\n  private initCore() {\n    this.initVideo();\n  }\n\n  private initVideo() {\n    this.video = new Video();\n    this.container.appendChild(this.video.rawVideo);\n    this.container.appendChild(this.video.canvas);\n  }\n}\n\nexport default Player;\n\n(window as any).SimplePlayer = Player; \n"],
  "mappings": "mBAAO,IAAMA,EAAwB,2BCErC,IAAMC,EAAe,IACfC,EAAgB,IAEhBC,EAAN,KAAY,CAUV,YAAYC,EAGT,CACD,KAAK,OAAQA,GAAA,YAAAA,EAAQ,QAASH,EAC9B,KAAK,QAASG,GAAA,YAAAA,EAAQ,SAAUF,EAEhC,KAAK,SAAW,SAAS,cAAc,OAAO,EAC9C,KAAK,SAAS,UAAY,2BAE1B,KAAK,WAAW,CAClB,CAEA,KAAKG,EAAgB,CAWnB,GAVIA,aAAgB,QAASA,GAAA,MAAAA,EAAM,UACjC,KAAK,KAAOA,EAEZ,KAAK,SAAS,UAAY,GAC1BA,EAAK,QAASC,GAAQ,CACpB,IAAMC,EAAS,KAAK,aAAaD,CAAG,EAChCC,GAAQ,KAAK,SAAS,YAAYA,CAAM,CAC9C,CAAC,GAGC,CAAC,KAAK,KAAM,MAAM,IAAI,MAAM,6BAA6B,EAE7D,KAAK,SAAS,KAAK,EACnB,KAAK,OAAO,CACd,CAEA,OAAQ,CACN,KAAK,SAAS,MAAM,CACtB,CAEQ,YAAa,CACnB,KAAK,OAAS,SAAS,cAAc,QAAQ,EAC7C,KAAK,IAAM,KAAK,OAAO,WAAW,IAAI,EAEtC,KAAK,OAAO,MAAQ,KAAK,MACzB,KAAK,OAAO,OAAS,KAAK,MAC5B,CAEQ,aAAaD,EAAa,CAzDpC,IAAAE,EA0DI,IAAMC,GAAMD,EAAAF,EAAI,MAAMI,CAAqB,IAA/B,YAAAF,EAAmC,GAC/C,GAAI,CAACC,EAAK,OAEV,IAAMF,EAAS,SAAS,cAAc,QAAQ,EAC9C,OAAAA,EAAO,IAAMD,EACbC,EAAO,KAAM,SAAS,OAAAE,GACfF,CACT,CAEQ,QAAS,CACX,KAAK,SAAS,QAAU,KAAK,SAAS,QAG1C,KAAK,IAAI,UAAU,KAAK,SAAU,EAAG,EAAG,KAAK,MAAO,KAAK,MAAM,EAC/D,OAAO,sBAAsB,IAAM,CACjC,KAAK,OAAO,CACd,CAAC,EACH,CAEF,EAEOI,EAAQR,EC7Ef,IAAMS,EAAN,KAAa,CAIX,YAAYC,EAAmB,CAC7B,IAAMC,EAAU,SAAS,eAAeD,CAAS,EACjD,GAAI,CAACC,EAAS,MAAM,IAAI,MAAM,sBAAsB,EAEpD,KAAK,UAAYA,EACjB,KAAK,SAAS,CAChB,CAGQ,UAAW,CACjB,KAAK,UAAU,CACjB,CAEQ,WAAY,CAClB,KAAK,MAAQ,IAAIC,EACjB,KAAK,UAAU,YAAY,KAAK,MAAM,QAAQ,EAC9C,KAAK,UAAU,YAAY,KAAK,MAAM,MAAM,CAC9C,CACF,EAEOC,EAAQJ,EAEd,OAAe,aAAeA",
  "names": ["VideoExtensionsRegexp", "DefaultWidth", "DefaultHeight", "Video", "params", "urls", "url", "source", "_a", "ext", "VideoExtensionsRegexp", "video_default", "Player", "elementId", "element", "video_default", "src_default"]
}
